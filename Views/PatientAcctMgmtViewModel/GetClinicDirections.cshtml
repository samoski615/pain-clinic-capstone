@model PainClinic.Models.Venue
@{
    ViewBag.Title = "About";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<p>Use this area to provide additional information.</p>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<div class="row">
    <div class="col-md-8">
        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", id = "TextBoxVenueLocation" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.VenueId, new { @id = "EventVenueId" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Country, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CountryCode, new SelectList(Model.Countries, "CountryCode", "CountryName"), "Choose Country", new { @class = "selectBox form-control ", @id = "DropDownListCounties" })
                @Html.HiddenFor(m => m.CountryName, new { @id = "HdnCountryName" })
                @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ZipCode, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control", id = "TextBoxZipCode", maxlength = 6 })
                @Html.ValidationMessageFor(m => m.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.State, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.State, new { @class = "form-control", id = "TextBoxState" })
                @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.City, new { @class = "form-control", id = "TextBoxCity" })
                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(m => m.Latitude, new { @id = "EventVenueLatitude" })
        @Html.HiddenFor(m => m.Longitude, new { @id = "EventVenueLongitude" })
    </div>
</div>

<script type="text/javascript">

        $(function () {
            $("#TextBoxVenueLocation").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("GetEventVenuesList", "PatientAcctMgmtViewModel")",
                        data: { SearchText: request.term },
                        dataType: "json",
                        type: "GET",
                        success: function (data) {
                            if (data.length == 0) {
                                $('#EventVenueId').val("");
                                $('#VenueLocationMesssage').show();
                                return false;
                            }
                            else {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.description,
                                        value: item.place_id
                                    }
                                }));
                            }
                        },
                        error: function (x, y, z) {
                            alert('error');
                        }
                    });
                },
                messages: {
                    noResults: "", results: ""
                },
                select: function (event, ui) {
                    $('#TextBoxVenueLocation').val(ui.item.label);
                    $('#EventVenueId').val(ui.item.value);
                        GetVenueDetailsByPlaceId(ui.item.value);  
                    return false;
                }
            }).autocomplete("widget").addClass("CitiesAutocomplete");
        });

        function GetVenueDetailsByPlaceId(PlaceId) {  
        $.ajax({  
            url: '@Url.Action("GetVenueDetailsByPlace", "PatientAcctMgmtViewModel")',   
            dataType: "json",  
            data: {  
                placeId: PlaceId  
            },  
            type: "GET",  
            async: false,  
            error: function (xhr, status, error) {  
                var err = eval("(" + xhr.responseText + ")");  
                toastr.error(err.message);  
            },  
            success: function (data) {  
                $('#TextBoxZipCode').val(data.ZipCode);  
                $('#DropDownListCounties option:selected').text(data.Country);  
                $('#TextBoxState').val(data.State);  
                $('#TextBoxCity').val(data.City);  
                $('#EventVenueLatitude').val(data.Latitude);  
                $('#EventVenueLongitude').val(data.Longitude);  
            },  
            beforeSend: function () {  
                $("#divProcessing").show();  
            }  
        });  
          /*This method is used to accept only numeric.*/  
    $("#TextBoxZipCode").keydown(function (e) {  
        // Allow: backspace, delete, tab, escape, enter and .  
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||  
            // Allow: Ctrl+A,Ctrl+C,Ctrl+V, Command+A  
            ((e.keyCode == 65 || e.keyCode == 86 || e.keyCode == 67) && (e.ctrlKey === true || e.metaKey === true)) ||  
            // Allow: home, end, left, right, down, up  
            (e.keyCode >= 35 && e.keyCode <= 40)) {  
            // let it happen, don't do anything  
            return;  
        }  
        // Ensure that it is a number and stop the keypress  
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {  
            $("#TextBoxZipCode").val('');  
            e.preventDefault();  
            return false;  
        }  
    });  
      
    var timer;  
    $("#TextBoxZipCode").on('keyup', function (event) {  
        clearTimeout(timer);  //clear any running timeout on key up  
        timer = setTimeout(function () { //then give it a second to see if the user is finished  
            if ($('#DropDownListCounties option:selected').val() == '' && $("#TextBoxZipCode").val() != '') {  
                alert('Country is required');  
                $("#TextBoxZipCode").val('');  
                return false;  
            }  
            else {  
                $.ajax({  
                    url: '@Url.Action("GetVenueDetailsByZipCode", "PatientAcctMgmtViewModel")',   
                    dataType: "json",  
                    data: {  
                        zipCode: $("#TextBoxZipCode").val(), region: $("#DropDownListCounties").val()  
                    },  
                    type: "GET",  
                    async: false,  
                    error: function (xhr, status, error) {  
                        var err = eval("(" + xhr.responseText + ")");  
                        toastr.error(err.message);  
                    },  
                    success: function (data) {  
                        $('#TextBoxZipCode').val(data.ZipCode);  
                        $('#TextBoxState').val(data.State);  
                        $('#TextBoxCity').val(data.City);  
                        $('#EventVenueLatitude').val(data.Latitude);  
                        $('#EventVenueLongitude').val(data.Longitude);  
                    },  
                    beforeSend: function () {  
                        $("#divProcessing").show();  
                    }  
                });  
            }  
        }, 500);  
    });  
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}   